name: CI

on:
  push:
  pull_request:
    branches: [develop]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - run: npm ci
      - run: npm run build

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: shogo82148/actions-setup-mysql@v1
        with:
          mysql-version: '8'
          root-password: 'root'
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - run: npm ci
      - run: npm run test:e2e:cov
        env:
          test: true

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./coverage/lcov.info

  release:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      - run: npm ci
      - run: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build] # [build, test, release]
    if: github.ref == 'refs/heads/deploy' # github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - shell: bash
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_APP_ID: ${{ secrets.RENDER_APP_ID }}
        run: |
          curl --request POST \
          --url "https://api.render.com/v1/services/$RENDER_APP_ID/deploys" \
          --header "Accept: application/json" \
          --header "Authorization: Bearer $RENDER_API_KEY"

